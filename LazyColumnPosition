import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.rememberLazyListState
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material.Card
import androidx.compose.material.FloatingActionButton
import androidx.compose.material.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.rememberCoroutineScope
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.exampleeee.ui.theme.ExampleeeeTheme
import kotlinx.coroutines.launch

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            ExampleeeeTheme {
                LazyColumnScrollPosition()
            }
        }
    }
}

@Composable
fun LazyColumnScrollPosition(){
    val list = (1..100).map{
        it.toString()
    }
    val listState = rememberLazyListState()
    val scope = rememberCoroutineScope()

    Box(
        modifier = Modifier.fillMaxSize()
    ){

        LazyColumn(
            state = listState,
            modifier = Modifier
                .background(Color.White)
                .fillMaxWidth()
                .wrapContentHeight(),
            contentPadding = PaddingValues(12.dp),
            verticalArrangement = Arrangement.spacedBy(8.dp)
        ){
            items(list.size) { txt ->
                Card(
                    backgroundColor = Color.LightGray,
                    modifier = Modifier.fillMaxWidth(),
                    elevation = 8.dp,
                    shape = RoundedCornerShape(16.dp)
                ){
                    Text(
                        text = txt.toString(),
                        fontWeight = FontWeight.Bold,
                        fontSize = 40.sp,
                        color = Color.White,
                        textAlign = TextAlign.Center,
                        modifier = Modifier.padding(16.dp)
                    )
                }
            }
        }

        Column(
            modifier = Modifier
                .padding(16.dp)
                .align(Alignment.CenterEnd),
            verticalArrangement = Arrangement.spacedBy(8.dp)
        ){
            FloatingActionButton(
                onClick = {
                    scope.launch {
                        listState.animateScrollToItem(24)
                    }
                },
                shape = RoundedCornerShape(50),
                backgroundColor = Color.Magenta
            ) {
                Text (
                    text = "25",
                    color = Color.White,
                    fontWeight = FontWeight.Bold
                )
            }

            FloatingActionButton(
                onClick = {
                    scope.launch {
                        listState.animateScrollToItem(44)
                    }
                },
                shape = RoundedCornerShape(50),
                backgroundColor = Color.Red
            ) {
                Text(
                    text = "45",
                    color = Color.White,
                    fontWeight = FontWeight.Bold
                )
            }
        }

    }
}
